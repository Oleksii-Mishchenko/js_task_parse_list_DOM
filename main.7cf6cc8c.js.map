{"version":3,"sources":["scripts/main.js"],"names":["salaryNum","str","slice","split","join","sortList","parseList","sort","a","b","dataset","salary","getEmployees","map","employee","name","innerText","trim","position","age","listOfEmployees","document","querySelectorAll","list","querySelector","sortedEmployees","innerHTML"],"mappings":";AAAA,aAqCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnCA,IAAMA,EAAY,SAAAC,GAAO,OAACA,EAAIC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAEvD,SAASC,EAASC,GACT,OAAA,EAAIA,GAAWC,KAAK,SAACC,EAAGC,GAC7BT,OAAAA,EAAUS,EAAEC,QAAQC,QAAUX,EAAUQ,EAAEE,QAAQC,UAItD,SAASC,EAAaN,GACb,OAAA,EAAIA,GAAWO,IAAI,SAAAC,GACjB,MAAA,CACLC,KAAOD,EAASE,UAAWC,OAC3BC,SAAUJ,EAASJ,QAAQQ,SAC3BP,OAAQG,EAASJ,QAAQC,OACzBQ,IAAKL,EAASJ,QAAQS,OAK5B,IAAMC,EAAkBC,SAASC,iBAAiB,MAC5CC,EAAOF,SAASG,cAAc,MAC9BC,EAAkBpB,EAASe,GAEjCG,EAAKG,UACAD,OAAAA,OAAAA,EAAgBZ,IAAI,SAAAC,GAEHA,MAAAA,kCAAAA,OAAAA,EAASJ,QAAQQ,SACnBJ,wBAAAA,OAAAA,EAASJ,QAAQC,OACpBG,qBAAAA,OAAAA,EAASJ,QAAQS,IAE1BL,mBAAAA,OAAAA,EAASE,UANgB,qBAQ5BZ,KAAK,IATV,MAYAQ,EAAaQ","file":"main.7cf6cc8c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst salaryNum = str => +str.slice(1).split(',').join('');\n\nfunction sortList(parseList) {\n  return [...parseList].sort((a, b) =>\n    salaryNum(b.dataset.salary) - salaryNum(a.dataset.salary)\n  );\n};\n\nfunction getEmployees(parseList) {\n  return [...parseList].map(employee => {\n    return {\n      name: (employee.innerText).trim(),\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n};\n\nconst listOfEmployees = document.querySelectorAll('li');\nconst list = document.querySelector('ul');\nconst sortedEmployees = sortList(listOfEmployees);\n\nlist.innerHTML = `\n  ${(sortedEmployees.map(employee => `\n    <li\n      data-position=${employee.dataset.position}\n      data-salary=${employee.dataset.salary}\n      data-age=${employee.dataset.age}\n    >\n      ${employee.innerText}\n    </li>\n  `).join(''))}\n`;\n\ngetEmployees(listOfEmployees);\n"]}